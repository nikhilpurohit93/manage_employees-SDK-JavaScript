/**
 * Manage Employees APIs
 * This API supports all services required to manage Employees on HR system
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 1.0.16
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ManageEmployeesApIs);
  }
}(this, function(expect, ManageEmployeesApIs) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ManageEmployeesApIs.Employee();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Employee', function() {
    it('should create an instance of Employee', function() {
      // uncomment below and update the code to test Employee
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be.a(ManageEmployeesApIs.Employee);
    });

    it('should have the property birthdate (base name: "birthdate")', function() {
      // uncomment below and update the code to test the property birthdate
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property customerId (base name: "customerId")', function() {
      // uncomment below and update the code to test the property customerId
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property emailVerified (base name: "email_verified")', function() {
      // uncomment below and update the code to test the property emailVerified
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property familyName (base name: "family_name")', function() {
      // uncomment below and update the code to test the property familyName
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property formatted (base name: "formatted")', function() {
      // uncomment below and update the code to test the property formatted
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property fullName (base name: "fullName")', function() {
      // uncomment below and update the code to test the property fullName
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property fullName (base name: "full_name")', function() {
      // uncomment below and update the code to test the property fullName
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property gender (base name: "gender")', function() {
      // uncomment below and update the code to test the property gender
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property givenName (base name: "given_name")', function() {
      // uncomment below and update the code to test the property givenName
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property houseName (base name: "house_name")', function() {
      // uncomment below and update the code to test the property houseName
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property locale (base name: "locale")', function() {
      // uncomment below and update the code to test the property locale
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property locality (base name: "locality")', function() {
      // uncomment below and update the code to test the property locality
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property middleName (base name: "middle_name")', function() {
      // uncomment below and update the code to test the property middleName
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property mobileNumber (base name: "mobileNumber")', function() {
      // uncomment below and update the code to test the property mobileNumber
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property modified (base name: "modified")', function() {
      // uncomment below and update the code to test the property modified
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property nickname (base name: "nickname")', function() {
      // uncomment below and update the code to test the property nickname
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property password (base name: "password")', function() {
      // uncomment below and update the code to test the property password
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property picture (base name: "picture")', function() {
      // uncomment below and update the code to test the property picture
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property postalCode (base name: "postal_code")', function() {
      // uncomment below and update the code to test the property postalCode
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property preferredUsername (base name: "preferred_username")', function() {
      // uncomment below and update the code to test the property preferredUsername
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property profile (base name: "profile")', function() {
      // uncomment below and update the code to test the property profile
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property region (base name: "region")', function() {
      // uncomment below and update the code to test the property region
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property street (base name: "street")', function() {
      // uncomment below and update the code to test the property street
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property streetAddress (base name: "street_address")', function() {
      // uncomment below and update the code to test the property streetAddress
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property website (base name: "website")', function() {
      // uncomment below and update the code to test the property website
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

    it('should have the property zoneinfo (base name: "zoneinfo")', function() {
      // uncomment below and update the code to test the property zoneinfo
      //var instane = new ManageEmployeesApIs.Employee();
      //expect(instance).to.be();
    });

  });

}));
